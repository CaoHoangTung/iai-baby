_target_: src.datamodules.baby_segment_datamodule.BabySegmentDataModule
data_dir: ${paths.data_dir}
batch_size: 4
num_workers: 8
pin_memory: false
image_max_size: [960, 1728]
resize_input: [320, 544]
white_pixel: [253, 231, 36, 255]
lazy_load: true

# List of preprocess
# The preprocess will be applied to the original image first and foremost
image_preprocessor:
  _target_: torchvision.transforms.transforms.Compose
  transforms: [
    # {
    #   _target_: torchvision.transforms.Normalize,
    #   mean: [0.1307],
    #   std: [0.3081]
    # },
  ]

label_preprocessor: 
  _target_: torchvision.transforms.transforms.Compose
  transforms: []

# List of augmentations
# The transformed dataset will have the additional images
# For example, if transforms = [{transformA}, {transformB}],
# then the final images will have (..., originalImageX, transformA(originalImageX), transformB(originalImageY), ...)
augmentations: [
  {
      _target_: torchvision.transforms.transforms.Compose,
      transforms: [
        {
          _target_: src.datamodules.components.augmentations.MultiRandomErasing,
          p: 0.9,
          repeat: [5, 15]
        },
        {
          _target_: torchvision.transforms.RandomHorizontalFlip,
          p: 0.5
        },
        {
          _target_: torchvision.transforms.RandomVerticalFlip,
          p: 0.5,
        },
        {
          _target_: torchvision.transforms.RandomRotation,
          degrees: 5
        },
      ]
    },
]